name: "App bereitstellen"

on:
  push:
    branches:
      - main

jobs:
  frontend-bauen:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: '21'

      - name: Frontend bauen
        working-directory: frontend
        run: |
          npm config delete registry
          npm config delete proxy
          npm config delete https-proxy 
          npm config set registry https://registry.npmjs.org/
          npm config list -l
          rm -f .npmrc
          rm -f package-lock.json
          npm cache clean --force
          npm install
          npm run build

      - uses: actions/upload-artifact@v4
        with:
          name: frontend-build
          path: frontend/dist/

  backend-bauen:
    runs-on: ubuntu-latest
    needs: frontend-bauen
    steps:
      - uses: actions/checkout@v4

      - uses: actions/download-artifact@v4
        with:
          name: frontend-build
          path: backend/src/main/resources/static

      - name: JDK einrichten
        uses: actions/setup-java@v4
        with:
          java-version: '21' # muss mit der Version in der pom.xml übereinstimmen
          distribution: 'temurin'
          cache: 'maven'

      - name: Mit Maven bauen
        run: mvn -B package --file backend/pom.xml

      - uses: actions/upload-artifact@v4
        with:
          name: app.jar
          path: backend/target/app.jar # muss mit finalName in der pom.xml übereinstimmen

  zu-docker-hub-hochladen:
    runs-on: ubuntu-latest
    needs: backend-bauen
    steps:
      - uses: actions/checkout@v4

      - uses: actions/download-artifact@v4
        with:
          name: app.jar
          path: backend/target

      - name: Bei DockerHub anmelden
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }} # muss mit dem Namen des Dockerhub-Kontos übereinstimmen
          password: ${{ secrets.DOCKERHUB_PASSWORD }} # muss mit dem Passwort des Dockerhub-Kontos übereinstimmen

      - name: Bauen und hochladen
        uses: docker/build-push-action@v5
        with:
          push: true
          tags: ${{ secrets.DOCKERHUB_TAG }} # Beispiel: benutzer/projekt:latest
          context: .

  bereitstellen:
    name: auf-render-bereitstellen
    runs-on: ubuntu-latest
    needs: zu-docker-hub-hochladen
    environment:
      name: Capstone-Projekt # Name des Capstone-Projekts
      url: https://neuefische.de/ # Link zur Bereitstellung
    steps:
      - name: Render.com-Bereitstellung auslösen
        run: |
          curl -X POST ${{ secrets.RENDER_DEPLOY }} #muss mit der URL des Render-Deployments übereinstimmen