name: "App bereitstellen"

on:
  push:
    branches:
      - main

jobs:
  frontend-bauen:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Frontend bauen
        working-directory: frontend
        run: |
          npm install -g npm@latest
          npm install
          npm run build

      - name: Debug frontend build directory
        run: ls -la frontend/dist/

      - uses: actions/upload-artifact@v4
        with:
          name: frontend-build
          path: frontend/dist/

  backend-bauen:
    runs-on: ubuntu-latest
    needs: frontend-bauen
    steps:
      - uses: actions/checkout@v4

      - uses: actions/download-artifact@v4
        with:
          name: frontend-build
          path: backend/src/main/resources/static

      - name: Debug backend static directory
        run: ls -la backend/src/main/resources/static

      - name: JDK einrichten
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: 'maven'

      - name: Mit Maven bauen
        run: mvn -B package --file backend/pom.xml

      - name: Debug backend target directory
        run: ls -la backend/target/

      - uses: actions/upload-artifact@v4
        with:
          name: app.jar
          path: backend/target/app.jar

  zu-docker-hub-hochladen:
    runs-on: ubuntu-latest
    needs: backend-bauen
    steps:
      - uses: actions/checkout@v4

      - uses: actions/download-artifact@v4
        with:
          name: app.jar
          path: backend/target

      - name: Debug downloaded artifact
        run: ls -la backend/target

      - name: Bei DockerHub anmelden
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Bauen und hochladen
        uses: docker/build-push-action@v5
        with:
          push: true
          tags: ${{ secrets.DOCKERHUB_TAG }}
          context: .

  bereitstellen:
    name: auf-render-bereitstellen
    runs-on: ubuntu-latest
    needs: zu-docker-hub-hochladen
    environment:
      name: Capstone-Projekt
      url: https://neuefische.de/
    steps:
      - name: Render.com-Bereitstellung ausl√∂sen
        run: |
          curl -X POST ${{ secrets.RENDER_DEPLOY }}
